datos <- read.csv("consumosal.csv")
head(datos)
# Describir los datos
summary(datos)
install.packages(MASS)
library(MASS)
fit_gamma <- fitdistr(datos$pre, "gamma")
fit_gamma&par
fit_gamma
fit_gamma$par
# Weibull
fit_weibull <- fitdistr(datos$pre, "weibull")
library(MASS)
# Gamma
fit_gamma <- fitdistr(datos$pre, "gamma")
# Normal
fit_normal <- fitdistr(datos$pre, "normal")
# Log-Normal
fit_lognormal <- fitdistr(datos$pre, "lognormal")
# Weibull
fit_weibull <- fitdistr(datos$pre, "weibull")
fit_gamma
fit_normal
fit_lognormal
fit_weibull
l_gamma = function(theta,x){
alpha= theta[1]
beta = theta[2]
-sum(dgamma(x,alpha,1/beta,log = TRUE))
}
# Usando función nlminb
(mv_gamma=nlminb(start= c(20,0.1),
objective = l_gamma,
lower= c(0,0),
upper= c(Inf,Inf),
x= datos$pre))
l_hat_gamma = -mv_gamma&objective
l_hat_gamma = -mv_gamma$objective
l_hat_gamma
fit_gamma
l_gamma = function(theta,x){
alpha= theta[1]
beta = theta[2]
-sum(dgamma(x,alpha,1/beta,log = TRUE))
}
# Usando función nlminb
(mv_gamma=nlminb(start= c(20,0.1),
objective = l_gamma,
lower= c(0,0),
upper= c(Inf,Inf),
x= datos$pre))
l_hat_gamma = -mv_gamma$objective
mv_gamma$par
mv_gamma$objective
l_hat_gamma
l_weibull = function(theta,x){
alpha = theta[1]
beta = theta[2]-sum(dweibull(x,alpha,beta,log = TRUE))
}
# Usando función nlminb
mv_weibull=nlminb(
start= c(1,1),
objective = l_weibull,
lower= c(0,0),
upper = c(Inf,Inf),
x = datos$pre
)
l_weibull = function(theta,x){
alpha = theta[1]
beta = theta[2]-sum(dweibull(x,alpha,beta,log = TRUE))
}
mv_weibull=nlminb(
start= c(1,1),
objective = l_weibull,
lower= c(0,0),
upper = c(Inf,Inf),
x = datos$pre
)
summary(datos$pre)
str(datos$pre)
summary(datos$pre)
str(datos$pre)
any(is.na(datos$pre))
any(!is.numeric(datos$pre))
l_weibull = function(theta,x){
alpha = theta[1]
beta = theta[2]
-sum(dweibull(x,alpha,beta,log = TRUE))
}
mv_weibull=nlminb(
start= c(1,1),
objective = l_weibull,
lower= c(0,0),
upper = c(Inf,Inf),
x = datos$pre
)
l_hat_weibull =-mv_weibull$objective
mv_weibull$par
l_hat_weibull
hipertension_data <- subset(datos, pre > 120)
summary(hipertension_data)
summary(hipertension_data$pre)
summary(datos$pre)
hipertension_data <- subset(datos, pre > 120)
# Calcular la diferencia (post - pre)
hipertension_data$diff <- hipertension_data$post - hipertension_data$pre
# Calcular la media y el error estándar de la diferencia
mean_diff <- mean(hipertension_data$diff)
std_error_diff <- sd(hipertension_data$diff) / sqrt(length(hipertension_data$diff))
# Calcular el intervalo de confianza al 95%
alpha <- 0.05
t_value <- qt(1 - alpha/2, df = length(hipertension_data$diff) - 1)
lower_bound <- mean_diff - t_value * std_error_diff
upper_bound <- mean_diff + t_value * std_error_diff
# Resultados
mean_diff
lower_bound
upper_bound
install.packages(BSDA)
library(BSDA)
t.test(x=hipertension_data,conf.level = 0.95)
hipertension_data <- subset(datos, pre > 120)
# Calcular la diferencia (post - pre)
hipertension_data$diff <- hipertension_data$post - hipertension_data$pre
# Calcular la media y el error estándar de la diferencia
mean_diff <- mean(hipertension_data$diff)
std_error_diff <- sd(hipertension_data$diff) / sqrt(length(hipertension_data$diff))
# Calcular el intervalo de confianza al 95%
alpha <- 0.05
t_value <- qt(1 - alpha/2, df = length(hipertension_data$diff) - 1)
lower_bound <- mean_diff - t_value * std_error_diff
upper_bound <- mean_diff + t_value * std_error_diff
# Resultados
mean_diff
lower_bound
upper_bound
t.test(x=hipertension_data$diff,conf.level = 0.95)
